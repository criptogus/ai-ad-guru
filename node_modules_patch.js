
// node_modules_patch.js
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log('Patching Rollup native.js to fix ESM compatibility issue...');

// Path to the problematic file
const nodeEntryPath = path.resolve('./node_modules/rollup/dist/es/shared/node-entry.js');

// Check if the file exists
if (fs.existsSync(nodeEntryPath)) {
  try {
    let content = fs.readFileSync(nodeEntryPath, 'utf8');
    
    // Replace the problematic import with a default import and destructuring
    const modifiedContent = content.replace(
      "import { parseAsync, xxhashBase64Url, xxhashBase36, xxhashBase16 } from '../../native.js';",
      `import pkg from '../../native.js';
const { parseAsync, xxhashBase64Url, xxhashBase36, xxhashBase16 } = pkg;`
    );
    
    // Write the modified content back to the file
    fs.writeFileSync(nodeEntryPath, modifiedContent);
    console.log('Successfully patched node-entry.js');
    
    // Now also check and patch native.js to ensure it has a default export
    const nativeJsPath = path.resolve('./node_modules/rollup/dist/native.js');
    
    if (fs.existsSync(nativeJsPath)) {
      let nativeContent = fs.readFileSync(nativeJsPath, 'utf8');
      
      // If the file doesn't already have a default export, add it
      if (!nativeContent.includes('module.exports = ') && !nativeContent.includes('export default')) {
        nativeContent = `${nativeContent}\n\n// Added default export for ESM compatibility
module.exports = { parseAsync, xxhashBase64Url, xxhashBase36, xxhashBase16 };`;
        
        fs.writeFileSync(nativeJsPath, nativeContent);
        console.log('Successfully patched native.js to add default export');
      }
    }
  } catch (err) {
    console.error('Error patching Rollup files:', err);
  }
} else {
  console.warn('Warning: node-entry.js file not found');
}
